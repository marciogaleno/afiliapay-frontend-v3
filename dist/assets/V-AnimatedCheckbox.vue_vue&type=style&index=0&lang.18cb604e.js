import{d as e,g as a,r as l,w as s,o as c,e as u,f as i,a3 as o,q as r,n as d}from"./vendor.2e4d4237.js";const n=["checked","value"],t=i("svg",{class:"checkmark",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 52 52"},[i("circle",{class:"checkmark-circle",cx:"26",cy:"26",r:"25",fill:"none"}),i("path",{class:"checkmark-check",fill:"none",d:"M14.1 27.2l7.1 7.2 16.7-16.8"})],-1);let v=0;var m=e({props:{value:{type:[String,Number],default:void 0},modelValue:{type:Array,default:()=>[]},color:{type:String,default:void 0,validator:e=>-1!==[void 0,"primary","info","success","warning","danger","purple"].indexOf(e)||(console.warn(`V-AnimatedCheckbox: invalid "${e}" color. Should be primary, info, success, warning, danger, purple or undefined`),!1)}},emits:["update:modelValue"],setup(e,{emit:m}){const p=e,h="animated-checkbox-"+ ++v,k=a((()=>p.modelValue.includes(p.value))),f=l(null),g=l(null);function w(){const e=[...p.modelValue];k.value?e.splice(e.indexOf(p.value),1):e.push(p.value),m("update:modelValue",e)}return s((()=>{f.value&&g.value&&(k.value?(f.value.classList.add("is-checked"),g.value.classList.add("is-opaque"),setTimeout((()=>{var e;null==(e=f.value)||e.classList.remove("is-unchecked")}),150)):(f.value.classList.add("is-unchecked"),f.value.classList.remove("is-checked"),setTimeout((()=>{var e;null==(e=g.value)||e.classList.remove("is-opaque")}),150)))})),(a,l)=>(c(),u("div",{ref:f,class:d(["animated-checkbox",[e.color&&"is-"+e.color]])},[i("input",o({id:h,type:"checkbox",checked:r(k),value:p.value},a.$attrs,{onChange:w}),null,16,n),i("label",{for:h,class:"checkmark-wrap"},[i("div",{ref:g,class:"shadow-circle"},null,512),t])],2))}});export{m as _};
